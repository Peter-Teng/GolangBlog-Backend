// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "PP同学",
            "email": "710955321@qq.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/visitor/create": {
            "post": {
                "description": "输入信息来创建一个visitor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visitor接口"
                ],
                "summary": "新增visitor用户",
                "parameters": [
                    {
                        "description": "访客电话号码",
                        "name": "mobile",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "访客邮箱",
                        "name": "email",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "访客昵称",
                        "name": "nickname",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "访客密码",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/entity.ResponseBody"
                        }
                    }
                }
            }
        },
        "/v1/visitor/info/{id}": {
            "get": {
                "description": "在URL中输入ID以获取Visitor信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Visitor接口"
                ],
                "summary": "获取单个visitor的信息（以id获取）",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "所请求的id参数",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Visitor"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ResponseBody": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "example": "Some message about the code."
                }
            }
        },
        "model.Visitor": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "xxxxx@xx.com"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastLoginTime": {
                    "type": "string",
                    "example": "2020-08-02T21:20:41+08:00"
                },
                "mobile": {
                    "type": "string",
                    "example": "13xxxxxxxxx"
                },
                "nickname": {
                    "type": "string",
                    "example": "PP同学"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "registerTime": {
                    "type": "string",
                    "example": "2020-08-02T21:20:41+08:00"
                },
                "status": {
                    "type": "integer",
                    "example": 1
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "0.1",
	Host:        "localhost:8600",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "PP同学个人博客接口文档",
	Description: "MarvelousBlog-Backend Swagger接口文档",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
